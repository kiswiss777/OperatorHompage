{"ast":null,"code":"import _toConsumableArray from\"/Users/kimtaehyun/Desktop/\\u1111\\u1173\\u1105\\u1169\\u1100\\u1173\\u1105\\u1162\\u1106\\u1175\\u11BC/front/front/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import _slicedToArray from\"/Users/kimtaehyun/Desktop/\\u1111\\u1173\\u1105\\u1169\\u1100\\u1173\\u1105\\u1162\\u1106\\u1175\\u11BC/front/front/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import{useState,useEffect}from\"react\";/*\n Page 번호 나누는 작업 rowsPerPage는 한 페이지당 몇개의 row를 가지게 할 것인지에 따라 분류하는 작업\n*/var calculateRange=function calculateRange(data,rowsPerPage){var range=[];var num=Math.ceil(data.length/rowsPerPage);for(var i=1;i<=num;i++){range.push(i);}return range;};/*\n   Data List를 Page 번호에 따라 잘라서 반환하는 역할\n  */var sliceData=function sliceData(data,page,rowsPerPage){return data.slice((page-1)*rowsPerPage,page*rowsPerPage);};/*\n   Hook 은 함수형 컴포넌트가 클래스형 컴포넌트의 기능을 사용할 수 있도록 해주는 기능이다. \n   특징적으로는 state와 lifecycle과 같은 기능을 사용 가능하게 해준다.\n\n  */var useTable=function useTable(data,page,rowsPerPage){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),tableRange=_useState2[0],setTableRange=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),slice=_useState4[0],setSlice=_useState4[1];/* useEffect에 대해서 더 공부 필요*/useEffect(function(){var range=calculateRange(data,rowsPerPage);setTableRange(_toConsumableArray(range));var slice=sliceData(data,page,rowsPerPage);setSlice(_toConsumableArray(slice));},[data,setTableRange,page,setSlice]);return{slice:slice,range:tableRange};};export default useTable;","map":{"version":3,"names":["useState","useEffect","calculateRange","data","rowsPerPage","range","num","Math","ceil","length","i","push","sliceData","page","slice","useTable","tableRange","setTableRange","setSlice"],"sources":["/Users/kimtaehyun/Desktop/프로그래밍/front/front/src/hooks/useTable.js"],"sourcesContent":["import { useState, useEffect } from \"react\";\n\n/*\n Page 번호 나누는 작업 rowsPerPage는 한 페이지당 몇개의 row를 가지게 할 것인지에 따라 분류하는 작업\n*/\nconst calculateRange = (data, rowsPerPage) => {\n    const range = [];\n    const num = Math.ceil(data.length / rowsPerPage);\n   \n    for (let i = 1; i <= num; i++) {\n      range.push(i);\n    }\n    return range;\n  };\n  \n  /*\n   Data List를 Page 번호에 따라 잘라서 반환하는 역할\n  */\n  const sliceData = (data, page, rowsPerPage) => {\n    return data.slice((page - 1) * rowsPerPage, page * rowsPerPage);\n  };\n\n  /*\n   Hook 은 함수형 컴포넌트가 클래스형 컴포넌트의 기능을 사용할 수 있도록 해주는 기능이다. \n   특징적으로는 state와 lifecycle과 같은 기능을 사용 가능하게 해준다.\n\n  */\n  const useTable = (data, page, rowsPerPage) => {\n    const [tableRange, setTableRange] = useState([]);\n    const [slice, setSlice] = useState([]);\n  /* useEffect에 대해서 더 공부 필요*/ \n    useEffect(() => {\n      const range = calculateRange(data, rowsPerPage);\n      setTableRange([...range]);\n  \n      const slice = sliceData(data, page, rowsPerPage);\n      setSlice([...slice]);\n    }, [data, setTableRange, page, setSlice]);\n  \n    return { slice, range: tableRange };\n  };\n  \n  export default useTable;"],"mappings":"oYAAA,OAASA,QAAQ,CAAEC,SAAS,KAAQ,OAAO,CAE3C;AACA;AACA,EACA,GAAMC,eAAc,CAAG,QAAjBA,eAAc,CAAIC,IAAI,CAAEC,WAAW,CAAK,CAC1C,GAAMC,MAAK,CAAG,EAAE,CAChB,GAAMC,IAAG,CAAGC,IAAI,CAACC,IAAI,CAACL,IAAI,CAACM,MAAM,CAAGL,WAAW,CAAC,CAEhD,IAAK,GAAIM,EAAC,CAAG,CAAC,CAAEA,CAAC,EAAIJ,GAAG,CAAEI,CAAC,EAAE,CAAE,CAC7BL,KAAK,CAACM,IAAI,CAACD,CAAC,CAAC,CACf,CACA,MAAOL,MAAK,CACd,CAAC,CAED;AACF;AACA,IACE,GAAMO,UAAS,CAAG,QAAZA,UAAS,CAAIT,IAAI,CAAEU,IAAI,CAAET,WAAW,CAAK,CAC7C,MAAOD,KAAI,CAACW,KAAK,CAAC,CAACD,IAAI,CAAG,CAAC,EAAIT,WAAW,CAAES,IAAI,CAAGT,WAAW,CAAC,CACjE,CAAC,CAED;AACF;AACA;AACA;AACA,IACE,GAAMW,SAAQ,CAAG,QAAXA,SAAQ,CAAIZ,IAAI,CAAEU,IAAI,CAAET,WAAW,CAAK,CAC5C,cAAoCJ,QAAQ,CAAC,EAAE,CAAC,wCAAzCgB,UAAU,eAAEC,aAAa,eAChC,eAA0BjB,QAAQ,CAAC,EAAE,CAAC,yCAA/Bc,KAAK,eAAEI,QAAQ,eACxB,2BACEjB,SAAS,CAAC,UAAM,CACd,GAAMI,MAAK,CAAGH,cAAc,CAACC,IAAI,CAAEC,WAAW,CAAC,CAC/Ca,aAAa,oBAAKZ,KAAK,EAAE,CAEzB,GAAMS,MAAK,CAAGF,SAAS,CAACT,IAAI,CAAEU,IAAI,CAAET,WAAW,CAAC,CAChDc,QAAQ,oBAAKJ,KAAK,EAAE,CACtB,CAAC,CAAE,CAACX,IAAI,CAAEc,aAAa,CAAEJ,IAAI,CAAEK,QAAQ,CAAC,CAAC,CAEzC,MAAO,CAAEJ,KAAK,CAALA,KAAK,CAAET,KAAK,CAAEW,UAAW,CAAC,CACrC,CAAC,CAED,cAAeD,SAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}