{"ast":null,"code":"var _jsxFileName = \"/Users/kimtaehyun/Desktop/\\u1111\\u1173\\u1105\\u1169\\u1100\\u1173\\u1105\\u1162\\u1106\\u1175\\u11BC/front/front/src/Components/pagination.jsx\";\nimport React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Pagination = props => {\n  //총 영화의 갯수, 현재 페이지, 한 페이지에 게시되는 영화 갯수 등을 props로 가져온다\n  const {\n    count,\n    pageNumber,\n    onClick,\n    currentPage\n  } = props;\n  //총 영화 갯수/게시되는 영화 갯수로 몇개의 페이지가 나오는지 구한다.\n  const number = Math.ceil(count / pageNumber);\n  //구한 수로 1에서 부터 해당 수로 채워진 array이를 만듬 map기능을 사용하기 위해서\n  const pageArray = _.range(1, number + 1);\n  if (number === 1) return null;\n  return /*#__PURE__*/_jsxDEV(\"nav\", {\n    className: \"Page navigation\",\n    children: /*#__PURE__*/_jsxDEV(\"ul\", {\n      className: \"pagination\",\n      children: pageArray.map(number =>\n      /*#__PURE__*/\n      // 현재 페이지가 반환되는 페이지와 같다면 active 클래스를 반환\n      _jsxDEV(\"li\", {\n        onClick: () => onClick(number),\n        className: currentPage === number ? \"page-item active\" : \"page-item\",\n        children: /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"page-link\",\n          children: number\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 138\n        }, this)\n      }, number, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 10\n  }, this);\n};\n\n//react는 props의 type들을 설정 할수가 있다 설정 된 type의 prop를 받지 않는 다면 console로 에러가 뜬다.\n_c = Pagination;\nPagination.propTypes = {\n  count: PropTypes.number.isRequired,\n  pageNumber: PropTypes.number.isRequired,\n  onClick: PropTypes.func.isRequired,\n  currentPage: PropTypes.number.isRequired\n};\nexport default Pagination;\nvar _c;\n$RefreshReg$(_c, \"Pagination\");","map":{"version":3,"names":["React","_","PropTypes","Pagination","props","count","pageNumber","onClick","currentPage","number","Math","ceil","pageArray","range","map","propTypes","isRequired","func"],"sources":["/Users/kimtaehyun/Desktop/프로그래밍/front/front/src/Components/pagination.jsx"],"sourcesContent":["import React from 'react';\nimport _ from 'lodash';\nimport PropTypes from 'prop-types';\n \n \nconst Pagination = props => {\n//총 영화의 갯수, 현재 페이지, 한 페이지에 게시되는 영화 갯수 등을 props로 가져온다\n    const {count, pageNumber, onClick,currentPage} = props;\n    //총 영화 갯수/게시되는 영화 갯수로 몇개의 페이지가 나오는지 구한다.\nconst number = Math.ceil( count/pageNumber);\n//구한 수로 1에서 부터 해당 수로 채워진 array이를 만듬 map기능을 사용하기 위해서\n    const pageArray = _.range(1, number+1);\n    \n    if(number ===1) return null;\n    return ( \n         <nav className=\"Page navigation\">\n            <ul className=\"pagination\">\n                {pageArray.map( number => // 현재 페이지가 반환되는 페이지와 같다면 active 클래스를 반환\n                    <li onClick={() => onClick(number)} key={number} className={currentPage===number ? \"page-item active\" : \"page-item\"}><a className=\"page-link\">{number}</a></li>\n                )}\n                \n            </ul>\n         </nav>\n     );\n}\n \n//react는 props의 type들을 설정 할수가 있다 설정 된 type의 prop를 받지 않는 다면 console로 에러가 뜬다.\nPagination.propTypes={\n    count:PropTypes.number.isRequired,\n    pageNumber:PropTypes.number.isRequired,\n    onClick:PropTypes.func.isRequired,\n    currentPage:PropTypes.number.isRequired\n}\n \nexport default Pagination;"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,CAAC,MAAM,QAAQ;AACtB,OAAOC,SAAS,MAAM,YAAY;AAAC;AAGnC,MAAMC,UAAU,GAAGC,KAAK,IAAI;EAC5B;EACI,MAAM;IAACC,KAAK;IAAEC,UAAU;IAAEC,OAAO;IAACC;EAAW,CAAC,GAAGJ,KAAK;EACtD;EACJ,MAAMK,MAAM,GAAGC,IAAI,CAACC,IAAI,CAAEN,KAAK,GAACC,UAAU,CAAC;EAC3C;EACI,MAAMM,SAAS,GAAGX,CAAC,CAACY,KAAK,CAAC,CAAC,EAAEJ,MAAM,GAAC,CAAC,CAAC;EAEtC,IAAGA,MAAM,KAAI,CAAC,EAAE,OAAO,IAAI;EAC3B,oBACK;IAAK,SAAS,EAAC,iBAAiB;IAAA,uBAC7B;MAAI,SAAS,EAAC,YAAY;MAAA,UACrBG,SAAS,CAACE,GAAG,CAAEL,MAAM;MAAA;MAAI;MACtB;QAAI,OAAO,EAAE,MAAMF,OAAO,CAACE,MAAM,CAAE;QAAc,SAAS,EAAED,WAAW,KAAGC,MAAM,GAAG,kBAAkB,GAAG,WAAY;QAAA,uBAAC;UAAG,SAAS,EAAC,WAAW;UAAA,UAAEA;QAAM;UAAA;UAAA;UAAA;QAAA;MAAK,GAAjHA,MAAM;QAAA;QAAA;QAAA;MAAA,QAAgH;IAClK;MAAA;MAAA;MAAA;IAAA;EAEA;IAAA;IAAA;IAAA;EAAA,QACF;AAEf,CAAC;;AAED;AAAA,KArBMN,UAAU;AAsBhBA,UAAU,CAACY,SAAS,GAAC;EACjBV,KAAK,EAACH,SAAS,CAACO,MAAM,CAACO,UAAU;EACjCV,UAAU,EAACJ,SAAS,CAACO,MAAM,CAACO,UAAU;EACtCT,OAAO,EAACL,SAAS,CAACe,IAAI,CAACD,UAAU;EACjCR,WAAW,EAACN,SAAS,CAACO,MAAM,CAACO;AACjC,CAAC;AAED,eAAeb,UAAU;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}